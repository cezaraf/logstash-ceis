input {

    jdbc {

        # jdbc_driver_library => "/home/apptcm/arquivos/jtds-1.3.1.jar"

        jdbc_driver_library => "C:\desenvolvimento\workspaces\workspace-logstash\logstash-ceis\jtds-1.3.1.jar"

        jdbc_driver_class => "Java::net.sourceforge.jtds.jdbc.Driver"

        jdbc_connection_string => "jdbc:jtds:sqlserver://tcmdados01:1433/COLARE"

        jdbc_user => "usr_bi_ro"

        jdbc_password => "tcm_bi"

        # a cada minuto
        schedule => "* * * * *"

        lowercase_column_names => false

        statement => '

            select

                e.id as "metadados_id",

                UPPER(mun.nm_municipio) as "metadados_municipio",

                mun.cod_ibge as "metadados_municipioCodIBGE",

                CONCAT(mun.regiao, \'ª REGIÃO\') as "metadados_regiao",

                UPPER(ug.nm_unidade_gestora) as "metadados_unidadeGestora",

                UPPER(reppf.nm_pessoa_fisica) as "metadados_representante",

                UPPER(perfil.nm_perfil) as "metadados_perfil",

                UPPER(l.nome_layout) as "metadados_layout",

                UPPER(l.desc_sigla) as "metadados_layoutSigla",

                UPPER(lpc.nome_prestacao_contas) as "metadados_prestacao",

                UPPER(lpc.desc_sigla) as "metadados_prestacaoSigla",

                e.mes_referencia as "metadados_mes",

                e.ano_referencia as "metadados_ano",

                e.desc_recibo as "metadados_recibo",

                e.dt_cadastro as "metadados_data",

                case when e.st_envio = \'HOMOLOGADO\' then \'HOMOLOGADO\' else \'NÃO HOMOLOGADO\' end as "metadados_homologacao",

                a.id as "dados_analise",

                ppc.id as "dados_idProcessamentoPontoControle",

                ppc.ponto_controle_id as "dados_idPontoControle",

                UPPER(pc.desc_regra) as "dados_descricaoPontoControle",

                pc.nr_peso as "dados_peso",

                UPPER(ppc.st_processamento) as "dados_statusProcessamento",

                ppc.dt_execucao as "dados_dataExecucao",

                case when ppc.resultado = 0 then \'false\' else \'true\' end as "dados_achado",

                (
                    CASE
                        WHEN a.id is not null
                            THEN
                                (
                                    SELECT
                                        sum(case when ppc1.ponto_controle_desconsiderado = 1 then 0 else cast(ppc1.resultado as numeric) end * pc1.nr_peso) / sum(cast(pc1.nr_peso as numeric))
                                    FROM
                                        colare.mestra.tb_processamento_ponto_controle ppc1
                                    INNER JOIN
                                        colare.pontos_controle.tb_ponto_controle_aud pc1 ON ppc1.ponto_controle_id = pc1.id AND ppc1.ponto_controle_revisao = pc1.rev
                                    WHERE
                                        ppc1.analise_id = a.id
                                )
                                ELSE
                                    0
                    END

                ) AS "dados_indiceRelevanciaAnalise"

            from colare.dbo.tb_envios_prestacao_contas as e
                
            inner join colare.mestra.tb_analise as a ON 

                a.id = (select max(id) from colare.mestra.tb_analise where envio_prestacao_contas_id = e.id and
                
                envio_prestacao_contas_revisao = (SELECT max(rev) from COLARE.dbo.tb_envios_prestacao_contas_aud as revAud where revAud.id = envio_prestacao_contas_id))

            inner join colare.mestra.tb_processamento_ponto_controle as ppc on ppc.analise_id = a.id

            inner join colare.pontos_controle.tb_ponto_controle_aud as pc on pc.id = ppc.ponto_controle_id and pc.rev = ppc.ponto_controle_revisao

            inner join colare.layouts.tb_layouts l on l.id = e.layout_id

            inner join colare.layouts.tb_prestacao_contas lpc on lpc.id = l.prestacao_contas_id

            inner join passaporte.organizacional.tb_representacao rep on rep.id = e.id_representacao

            inner join passaporte.receita.tb_pessoa_fisica reppf on reppf.id = rep.pf_representante_id

            inner join passaporte.dbo.tb_perfil perfil on perfil.id = rep.perfil_id

            inner join passaporte.organizacional.tb_unidade_gestora ug on ug.id = rep.ug_representada_id

            inner join passaporte.organizacional.tb_municipio mun on mun.id = ug.municipio_id

            where ppc.dt_execucao >= dateadd(DD, -2 ,getdate()) and e.status = \'ATIVO\'
        '
    }
}

filter {

    mutate {

        add_field => { "[metadados][id]" => "%{metadados_id}" }

        add_field => { "[metadados][municipio]" => "%{metadados_municipio}" }

        add_field => { "[metadados][municipioCodIBGE]" => "%{metadados_municipioCodIBGE}" }

        add_field => { "[metadados][regiao]" => "%{metadados_regiao}" }

        add_field => { "[metadados][unidadeGestora]" => "%{metadados_unidadeGestora}" }

        add_field => { "[metadados][representante]" => "%{metadados_representante}" }

        add_field => { "[metadados][perfil]" => "%{metadados_perfil}" }

        add_field => { "[metadados][layout]" => "%{metadados_layout}" }

        add_field => { "[metadados][layoutSigla]" => "%{metadados_layoutSigla}" }

        add_field => { "[metadados][prestacao]" => "%{metadados_prestacao}" }

        add_field => { "[metadados][prestacaoSigla]" => "%{metadados_prestacaoSigla}" }

        add_field => { "[metadados][mes]" => "%{metadados_mes}" }

        add_field => { "[metadados][ano]" => "%{metadados_ano}" }

        add_field => { "[metadados][recibo]" => "%{metadados_recibo}" }

        add_field => { "[metadados][data]" => "%{metadados_data}" }

        add_field => { "[metadados][homologacao]" => "%{metadados_homologacao}" }

        add_field => { "[dados][analise]" => "%{dados_analise}" }

        add_field => { "[dados][idProcessamentoPontoControle]" => "%{dados_idProcessamentoPontoControle}" }

        add_field => { "[dados][idPontoControle]" => "%{dados_idPontoControle}" }

        add_field => { "[dados][descricaoPontoControle]" => "%{dados_descricaoPontoControle}" }

        add_field => { "[dados][peso]" => "%{dados_peso}" }

        add_field => { "[dados][statusProcessamento]" => "%{dados_statusProcessamento}" }

        add_field => { "[dados][dataExecucao]" => "%{dados_dataExecucao}" }

        add_field => { "[dados][achado]" => "%{dados_achado}" }

        add_field => { "[dados][indiceRelevanciaAnalise]" => "%{dados_indiceRelevanciaAnalise}" }

        convert => {

            "[metadados][id]" => "integer"

            "[metadados][mes]" => "integer"

            "[metadados][ano]" => "integer"

            "[dados][analise]" => "integer"

            "[dados][idProcessamentoPontoControle]" => "integer"

            "[dados][idPontoControle]" => "integer"

            "[dados][achado]" => "boolean"

            "[dados][indiceRelevanciaAnalise]" => "float"

            "[dados][peso]" => "integer"
        }

        remove_field => [

            "metadados_id",

            "metadados_municipio",

            "metadados_municipioCodIBGE",

            "metadados_regiao",

            "metadados_unidadeGestora",

            "metadados_representante",

            "metadados_perfil",

            "metadados_layout",

            "metadados_layoutSigla",

            "metadados_prestacao",

            "metadados_prestacaoSigla",

            "metadados_mes",

            "metadados_ano",

            "metadados_recibo",

            "metadados_data",

            "metadados_homologacao",

            "dados_analise",

            "dados_idProcessamentoPontoControle",

            "dados_idPontoControle",

            "dados_descricaoPontoControle",

            "dados_peso",

            "dados_statusProcessamento",

            "dados_dataExecucao",

            "dados_achado",

            "dados_indiceRelevanciaAnalise",

            "@timestamp",

            "@version"
        ]
    }
}

output {

    elasticsearch {

        hosts => "10.10.110.64:9200"

        index => "colare.ppc"

        document_id => "%{[metadados][id]}.%{[dados][idPontoControle]}"
    }
}
